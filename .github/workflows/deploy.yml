name: Deploy Flask App

on:
  pull_request:
    branches:
      - main

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}
      WEATHER_API_TOKEN: ${{ secrets.WEATHER_API_TOKEN }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_PUBLIC_IP_1: ${{ secrets.EC2_PUBLIC_IP_1 }}
      EC2_PUBLIC_IP_2: ${{ secrets.EC2_PUBLIC_IP_2 }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REPOSITORY:$IMAGE_TAG
      
      - name: SSH and Deploy to EC2 Instances
        uses: appleboy/ssh-action@master
        env:
          IMAGE_TAG: ${{ github.sha }}
        with:
          host: "${{ env.EC2_PUBLIC_IP_1 }},${{ env.EC2_PUBLIC_IP_2 }}"
          username: ec2-user
          key: ${{ env.EC2_SSH_KEY }}
          envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, ECR_REPOSITORY, WEATHER_API_TOKEN, AWS_REGION, IMAGE_TAG
          script: |
            echo "AWS CLI version: $(aws --version)"
            echo "Docker version: $(docker --version)"
            # Stop and remove the container if it exists
            docker stop flask_app 2>/dev/null || true
            docker rm flask_app 2>/dev/null || true
            echo "AWS credentials set...."
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_REGION=${AWS_REGION}
            # Debugging: Print variables to ensure they're set correctly
            echo "REPOSITORY_URI: $ECR_REPOSITORY"
            echo "IMAGE_TAG: $IMAGE_TAG"
            echo "Logging in to ECR...."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY
            echo "Logged in successful..."

            echo "Pulling  image from ECR..."
            docker pull $ECR_REPOSITORY:$IMAGE_TAG
            echo "Docker pull completed..."

            echo "Running the container..."
            docker run -d -p 80:5000 --name flask_app \
              -e WEATHER_API_TOKEN=$WEATHER_API_TOKEN \
              $ECR_REPOSITORY:$IMAGE_TAG
